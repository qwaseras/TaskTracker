var Comments = React.createClass({

  getInitialState: function(){
		return{
			comments: this.props.comments,
      title: ''
		}
  },

  handleUserInput: function(obj){
  		this.setState(obj)
  },


  handleSubmit: function(){
  		var comment = {
  			title: this.state.title,
        task_id: this.props.task_id
  			};
  		 $.ajax({
      		 	url: '/comments',
      		 	 type: 'POST',
      		 	 data: { comment },
      		 	 success: () => { console.log('comment added', comment.title); }
      		 	}).done(function(data){
      		 		this.addNewComment(data);
      		 	}.bind(this));
      	},
      	addNewComment: function(comment){
      		var comments = React.addons.update(this.state.comments,{$push: [comment]});
      		this.setState({comments: comments});
    },

    handleDelete: function(id) {
       $.ajax(
         {
           url: `/comments/${id}`,
           type: 'DELETE',
           success:() => { this.removeItemClient(id); console.log(`comment with id ${id} deleted`)}
         }
       );
      },

    removeItemClient: function(id){
       var comments = this.state.comments.filter((comment) => { return comment.id != id; });
       this.setState({ comments: comments });
     },

  render() {
    return(
    <div>
      <CommentForm onFormSubmit={this.handleSubmit} onInput = {this.handleUserInput}/>
      <div className="list-group">
        <h3>Comments</h3>
  			{this.state.comments.map((comment) =>{
  					return(
              <Comment comment = {comment} key = {comment.id} handleDelete={this.handleDelete}/>
					        )
  					}
  				)}
			</div>
    </div>
    )
  }
})
