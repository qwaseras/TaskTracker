var Comments = React.createClass({

  getInitialState: function(){
		return{
			comments: this.props.comments,
		}
  },


  handleSubmit: function(comment){
    comment.task_id = this.props.task_id,
  		 $.ajax({
      		 	url: '/comments',
      		 	 type: 'POST',
      		 	 data: { comment },
      		 	 success: (response) => { console.log('comment added', comment.title, response.created_at); this.addComment(response) }
      		 	})
      	},


    handleDelete: function(id) {
       $.ajax(
         {
           url: `/comments/${id}`,
           type: 'DELETE',
           success:() => { this.removeComment(id); console.log(`comment with id ${id} deleted`)}
         }
       );
      },

    handleUpdate(comment) {
        $.ajax({
          url: `/comments/${comment.id}}`,
          type: 'PUT',
           data: { comment: comment },
           success: () => {
                            this.updateComment(comment);
                           }
          } )
        },

    addComment(comment) {
      var newState = this.state.comments.concat(comment);
      this.setState({ comments: newState })
     },

    updateComment(comment) {
      var comments = this.state.comments.filter((i) => { return i.id != comment.id });
      comments.push(comment);
      this.setState({comments: comments });
    },

    removeComment: function(id){
       var comments = this.state.comments.filter((comment) => { return comment.id != id; });
       this.setState({ comments: comments });
     },

  render() {
    return(
    <div>
      <div className="list-group container">
        <div className="row">
            <div className="col">
              <h3>Comments</h3>
            </div>
            <div className="col">
              <CommentForm onFormSubmit={this.handleSubmit}/>
            </div>
        </div>

  			{this.state.comments.reverse().map((comment) =>{
  					return(
              <Comment comment = {comment} key = {comment.id} handleDelete={this.handleDelete} handleUpdate = {this.handleUpdate}/>
					        )
  					}
  				)}
			</div>
    </div>
    )
  }
})
